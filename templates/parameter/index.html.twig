{% extends 'base.html.twig' %} 
{% block title %}Digi-3 - Paramètres généraux{% endblock %}
{% block body %}
{% include 'includes/header.html.twig' with {'user': user} %}
<section class="parameter_landing flex">
  {% include 'parameter/_menu.html.twig' %}
  <div class="parameter_content">
    <div class="account-page">
      <div class="account-header flex">
        <h2>Mon compte</h2>
        <div class="account-info flex">
          <div class="title flex-col">
            <p>{{ user.userFirstName }}</p>
            <p>{{ user.userLastName }}</p>
            <p>{{ user.userEmail }}</p>
          </div>
          <div class="profile-pic flex">
            <label class="flex" for="file">
              <img
                src="{{ asset('build/images/account/account-change.png') }}"
                alt="Icone changement de photo de profil"
              />
            </label>
            <input id="file" type="file" name="profile_picture" accept="image/*" />
            <img
              id="output"
              src="{{ user.userAvatar }}"
              alt="Photo de profil de {{ user.userEmail }}"
            />
          </div>
        </div>
      </div>

      <div class="account-body flex">
        <div class="account-email flex-col">
          <h3>Modifier son adresse e-mail</h3>
          {{ form_start(emailForm, { method: "POST" }) }}
          {{ form_row(emailForm.email) }}
          <div class="password-field">
            {{ form_row(emailForm.password, {'id': 'email_form_password'}) }}
            <span class="toggle-password" onclick="togglePasswordVisibility('email_form_password')">
              <img src="{{ asset('build/images/icons/eye.png') }}" alt="Afficher/Masquer le mot de passe">
            </span>
          </div>
          <button type="submit" class="btn-submit">Nouvelle adresse e-mail</button>
          {% for message in app.flashes('error') %}
            <div class="alert alert-danger">{{ message }}</div>
          {% endfor %}
          {% for message in app.flashes('success') %}
            <div class="alert alert-success">{{ message }}</div>
          {% endfor %}
          {{ form_end(emailForm) }}
        </div>

        <div class="account-password flex-col">
          <h3>Modifier son mot de passe</h3>
          {{ form_start(passwordForm, { method: "POST" }) }}
          <div class="password-field">
            {{ form_row(passwordForm.actual_password, {'id': 'password_form_actual'}) }}
            <span class="toggle-password" onclick="togglePasswordVisibility('password_form_actual')">
              <img src="{{ asset('build/images/icons/eye.png') }}" alt="Afficher/Masquer le mot de passe">
            </span>
          </div>
          <div class="password-field">
            {{ form_row(passwordForm.password, {'id': 'password_form_new'}) }}
            <span class="toggle-password" onclick="togglePasswordVisibility('password_form_new')">
              <img src="{{ asset('build/images/icons/eye.png') }}" alt="Afficher/Masquer le mot de passe">
            </span>
          </div>
          <button type="submit" class="btn-submit">Nouveau mot de passe</button>
          {% for message in app.flashes('error') %}
            <div class="alert alert-danger">{{ message }}</div>
          {% endfor %}
          {{ form_end(passwordForm) }}
        </div>
      </div>
    </div>
  </div>
</section>
{% endblock %}

{% block javascripts %}
{{ parent() }}
<script>
  function togglePasswordVisibility(inputId) {
    const input = document.getElementById(inputId);
    if (!input) {
        console.error('Input not found:', inputId);
        return;
    }
    
    const container = input.closest('.password-field');
    if (!container) {
        console.error('Password field container not found');
        return;
    }
    
    const icon = container.querySelector('.toggle-password img');
    if (!icon) {
        console.error('Toggle icon not found');
        return;
    }
    
    if (input.type === 'password') {
        input.type = 'text';
        icon.src = "{{ asset('build/images/icons/eye-off.png') }}";
    } else {
        input.type = 'password';
        icon.src = "{{ asset('build/images/icons/eye.png') }}";
    }
  }

  document.getElementById("file").addEventListener("change", function (event) {
    const file = event.target.files[0];
    if (file) {
      console.log("Fichier sélectionné:", file.name);

      const formData = new FormData();
      formData.append("profile_picture", file);
      formData.append("_token", "{{ csrf_token('upload_photo') }}");

      fetch("/parameter/generaux", {
        method: "POST",
        body: formData,
        headers: {
          'X-CSRF-TOKEN': "{{ csrf_token('upload_photo') }}"
        }
      })
      .then((response) => {
        console.log("Réponse du serveur:", response);
        return response.json();
      })
      .then((data) => {
        console.log("Données récupérées:", data);
        if (data.success) {
          document.getElementById("output").src = data.newProfilePictureUrl;
          alert('Photo de profil mise à jour avec succès');
        } else {
          alert(data.error || 'Une erreur est survenue');
        }
      })
      .catch((error) => {
        console.error("Erreur lors de la requête:", error);
        alert('Une erreur est survenue lors de l\'upload');
      });
    }
  });

  // Debug des formulaires
  document.querySelectorAll('form').forEach(form => {
    form.addEventListener('submit', function(e) {
      e.preventDefault();
      console.log('Soumission du formulaire:', this.getAttribute('name'));
      
      const formData = new FormData(this);
      for (let [key, value] of formData.entries()) {
        console.log(key + ':', value);
      }
      
      this.submit();
    });
  });
</script>
{% endblock %}
