{% extends 'base.html.twig' %}

{% block title %}Gestion des utilisateurs{% endblock %}

{% block body %}
<div class="container mt-5">
    <h1 class="mb-4">Gestion des utilisateurs</h1>

    <!-- Bouton pour ajouter un nouvel utilisateur -->
    <div class="text-end mb-3">
        <button class="btn btn-primary" id="addUserBtn">Ajouter un utilisateur</button>
    </div>

    <!-- Tableau des utilisateurs -->
    <table class="table table-striped">
        <thead>
            <tr>
                <th>ID</th>
                <th>Nom</th>
                <th>Email</th>
                <th>Rôle</th>
                <th>Date de création</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody id="userTableBody">
            {% for user in users %}
                <tr data-id="{{ user.id }}">
                    <td>{{ user.id }}</td>
                    <td class="editable" data-field="name">{{ user.name }}</td>
                    <td class="editable" data-field="email">{{ user.email }}</td>
                    <td class="editable" data-field="role">{{ user.role }}</td>
                    <td>{{ user.createdAt|date('d/m/Y H:i') }}</td>
                    <td>
                        <button class="btn btn-sm btn-success editBtn">Modifier</button>
                        <button class="btn btn-sm btn-danger deleteBtn">Supprimer</button>
                    </td>
                </tr>
            {% else %}
                <tr>
                    <td colspan="6" class="text-center">Aucun utilisateur trouvé.</td>
                </tr>
            {% endfor %}
        </tbody>
    </table>
</div>

<!-- Modal pour ajouter/modifier un utilisateur -->
<div class="modal fade" id="userModal" tabindex="-1" aria-labelledby="userModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="userModalLabel">Ajouter/Modifier un utilisateur</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="userForm">
                <div class="modal-body">
                    <input type="hidden" id="userId" name="id">
                    <div class="mb-3">
                        <label for="userName" class="form-label">Nom</label>
                        <input type="text" class="form-control" id="userName" name="name" required>
                    </div>
                    <div class="mb-3">
                        <label for="userEmail" class="form-label">Email</label>
                        <input type="email" class="form-control" id="userEmail" name="email" required>
                    </div>
                    <div class="mb-3">
                        <label for="userRole" class="form-label">Rôle</label>
                        <select class="form-select" id="userRole" name="role" required>
                            <option value="admin">Admin</option>
                            <option value="user">Utilisateur</option>
                        </select>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annuler</button>
                    <button type="submit" class="btn btn-primary">Enregistrer</button>
                </div>
            </form>
        </div>
    </div>
</div>

{% endblock %}

{% block javascripts %}
<script>
    document.addEventListener('DOMContentLoaded', () => {
        // Bouton pour ouvrir le modal d'ajout
        document.getElementById('addUserBtn').addEventListener('click', () => {
            clearForm();
            document.getElementById('userModalLabel').innerText = 'Ajouter un utilisateur';
            new bootstrap.Modal(document.getElementById('userModal')).show();
        });

        // Gestion du formulaire d'ajout/modification
        document.getElementById('userForm').addEventListener('submit', (e) => {
            e.preventDefault();
            const formData = new FormData(e.target);
            const userId = formData.get('id');
            const url = userId ? `/users/${userId}/edit` : '/users/new';

            fetch(url, {
                method: 'POST',
                body: formData
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    location.reload();
                } else {
                    alert('Une erreur est survenue.');
                }
            });
        });

        // Boutons de modification
        document.querySelectorAll('.editBtn').forEach(button => {
            button.addEventListener('click', (e) => {
                const row = e.target.closest('tr');
                const userId = row.dataset.id;
                document.getElementById('userModalLabel').innerText = 'Modifier un utilisateur';
                document.getElementById('userId').value = userId;
                document.getElementById('userName').value = row.querySelector('[data-field="name"]').innerText;
                document.getElementById('userEmail').value = row.querySelector('[data-field="email"]').innerText;
                document.getElementById('userRole').value = row.querySelector('[data-field="role"]').innerText;
                new bootstrap.Modal(document.getElementById('userModal')).show();
            });
        });

        // Boutons de suppression
        document.querySelectorAll('.deleteBtn').forEach(button => {
            button.addEventListener('click', (e) => {
                const row = e.target.closest('tr');
                const userId = row.dataset.id;
                if (confirm('Voulez-vous vraiment supprimer cet utilisateur ?')) {
                    fetch(`/users/${userId}/delete`, { method: 'DELETE' })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                row.remove();
                            } else {
                                alert('Une erreur est survenue.');
                            }
                        });
                }
            });
        });

        // Nettoyer le formulaire
        function clearForm() {
            document.getElementById('userId').value = '';
            document.getElementById('userName').value = '';
            document.getElementById('userEmail').value = '';
            document.getElementById('userRole').value = '';
        }
    });
</script>
{% endblock %}
