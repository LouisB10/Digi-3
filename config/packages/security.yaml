security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
        App\Entity\User:
            algorithm: auto
            cost: 15
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: userEmail
    
    # Hiérarchie des rôles
    role_hierarchy:
        ROLE_DEVELOPER: ROLE_USER
        ROLE_LEAD_DEVELOPER: ROLE_DEVELOPER
        ROLE_PROJECT_MANAGER: ROLE_LEAD_DEVELOPER
        ROLE_RESPONSABLE: ROLE_PROJECT_MANAGER
        ROLE_ADMIN: [ROLE_RESPONSABLE, ROLE_ALLOWED_TO_SWITCH]
                
    # https://symfony.com/doc/current/security.html#the-firewall
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: app_user_provider
            custom_authenticator: App\Security\AppCustomAuthenticator
            logout:
                path: app_logout
                target: app_auth
                invalidate_session: true
            remember_me:
                secret: '%kernel.secret%'
                lifetime: 604800
                path: /
                secure: false
                httponly: true
            access_denied_handler: App\Security\AccessDeniedHandler
    # https://symfony.com/doc/current/security/impersonating_user.html
    # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/$, roles: PUBLIC_ACCESS }
        - { path: ^/auth, roles: PUBLIC_ACCESS }
        - { path: ^/logout, roles: PUBLIC_ACCESS }
        - { path: ^/reset-password, roles: PUBLIC_ACCESS }
        - { path: ^/js, roles: PUBLIC_ACCESS }
        - { path: ^/css, roles: PUBLIC_ACCESS }
        - { path: ^/build, roles: PUBLIC_ACCESS }
        - { path: ^/dashboard, roles: ROLE_USER }
        - { path: ^/parameter, roles: IS_AUTHENTICATED_REMEMBERED }
        - { path: ^/parameter/users$, roles: ROLE_PROJECT_MANAGER }
        - { path: ^/parameter/customers$, roles: ROLE_PROJECT_MANAGER }
        - { path: ^/parameter/projects, roles: ROLE_PROJECT_MANAGER }
        - { path: ^/parameter/users/, roles: [ROLE_RESPONSABLE, ROLE_ADMIN] }
        - { path: ^/parameter/customers/, roles: [ROLE_RESPONSABLE, ROLE_ADMIN] }
        - { path: ^/parameter/app_configuration, roles: ROLE_ADMIN }
        - { path: ^/admin, roles: ROLE_ADMIN }

when@test:
    security:
        password_hashers:
            App\Entity\User: 'auto'
